class MyHashSet:

    def __init__(self):
        self.hashSet = {}

    def add(self, key: int) -> None:
        self.hashSet[key] = None

    def remove(self, key: int) -> None:
        if key in self.hashSet:
            del self.hashSet[key]

    def contains(self, key: int) -> bool:
        return key in self.hashSet

    # Explanation:
    # I define a dictionary and keep keys in it. In the dictionary, the duplicate keys are overwritten,
    # so its behavior is the same as a Set. Also, its time complexity is O(1).

# Your MyHashSet object will be instantiated and called as such:
# obj = MyHashSet()
# obj.add(key)
# obj.remove(key)
# param_3 = obj.contains(key)